q
session
n
session
q
presenter.choices_for_question_prompt
q
n
session[session_token]
voted_questions
n
SecureRandom.hex(16)
session[:user_token]
session_token
n
session_token
n
@choice
q
session[session_token]
session_token
session
q
session[session_token]
session
session[session_token]
session_token
q
choice_vote_data
n
s
q
presenter.choice_votes
q
y
q
presenter.choice_votes
q
presenter.chart_data
q
chart_data
choice_colors
q
choices.map.with_index { |choice, idx| 
                {data: [chart_data[idx]], color: choice_colors[idx]}
            }
bar_chart choices.map.with_index { |choice, idx| 
                {data: [chart_data[idx]], color: choice_colors[idx]}
            }
choices.map.with_index { |choice, idx| 
                data: [chart_data[idx]], color: choice_colors[idx]
            }
choices.map.with_index { |choice, idx| 
                {data: [chart_data[idx]], color: choice_colors[idx]}
            }
bar_chart choices.map.with_index { |choice, idx| 
                {data: [chart_data[idx]], color: choice_colors[idx]}
            }
bar_chart choices.length.times { |idx| 
                {data: [chart_data[idx]], color: choice_colors[idx]}
            }
q
choices.map.with_index { |choice, idx| 
                {data: [chart_data[idx]], color: choice_colors[idx]}
            }
choices.each_with_index { |choice, idx| 
                    {data: [chart_data[idx]], color: choice_colors[idx]}
                }
choices.each_with_index { |choice, idx| 
   21:                 {data: [chart_data[idx]], color: choice_colors[idx]}
   22:             }
q
choice_colors
chart_data
q
arr
choices.each { |choice| arr << choice.bar_color }
arr
arr = []
choices
choices.map { |choice| 
                {name: choice.name, data: {choice.name => choice.vote_percentage(question.total_votes).to_f}, color: choice.bar_color}
            }
var = bar_chart choices.map { |choice| 
                    {name: choice.name, data: {choice.name => choice.vote_percentage(question.total_votes).to_f}, color: choice.bar_color}
                }
bar_chart choices.map { |choice| 
   15:                 {name: choice.name, data: {choice.name => choice.vote_percentage(question.total_votes).to_f}, color: choice.bar_color}
   16:             }
choices
q
n
q
n
choices
n
choices
q
list=
bar_chart choices.map { |choice| 
   15:                 {name: choice.name, data: {choice.name => choice.vote_percentage(question.total_votes).to_f}, color: choice.bar_color}
=> 16:             }
choice
choices
n
choices
q
choices
n
s
n
s
n
s
n
s
n
s
n
q
choice
n
s
n
choices
n
choices
q
"60%".to_i
"60%".to_f/100
"60%".to_f
choices_graph_data
choices_graph_data[choice.name].to_f
n
q
choices_graph_data
q
choice.bar_color
choices_graph_data[choice.name]
choices.first.name
choices.first
choices
choice
n
q
choices
choice
n
s
choices
q
choices_bar_colors
choices_graph_data
q
choices_bar_colors
choices_graph_data
q
choices_bar_colors
q
choices_bar_colors
choices_graph_data
q
choices_graph_data
choice_bar_colors
question
q
question
choices_graph_data
choice_bar_colors
q
choices_graph_data
q
vote_percentage % vote_percentage.floor == 0
vote_percentage
n
(votes.to_f / total_votes.to_f * 100).round(2)
list=
total_votes
total_votres
q
choices_graph_data
q
n
voted_questions
cookies[:voted_questions]
n
voted_questions
 cookies[:voted_questions]
n
voted_questions << @choice.question.id
@choice.question.id
voted_questions
n
@choice.question.id.to_s
voted_questions.include?(@choice.question.id.to_s)
voted_questions
n
list=
cookies[:voted_questions]
cookies
cookies[:voted_questions]
voted_questions
q
n
question.id.to_s
cookies[:voted_questions]
question.description
n
question.description
question.id.to_s
cookies[:voted_questions]
q
n
q
n
s
n
cookies[:voted_questions]
voted_questions
n
@choice.question.id
n
voted_questions.include?(@choice.question.id.to_s)
n
cookies[:voted_questions]
cookies[:voted_questions].presence
voted_questions
q
y
q
cookies[:voted_questions]
q
cookies[:voted_questions].to_s.include?(@choice.question.id.to_s)
cookies[:voted_questions]
q
cookies[:voted_questions]
cookies
cookies[:voted_questions]
q
choices
q
self
votes
